# .env.example

# Basic Config
HEALTH_CHECK=health
PATH_BASE=exchange
PORT=8081
APP_NAME=Exchange
ASSETS_ROOT=/static/assets
ACCESS_TOKEN_EXPIRE_MINUTES=7200

# SQLite Config (default)
USE_SQLITE=True
DB_ENGINE=sqlite
DB_NAME=exchange

# Postgres (optional)
#DB_USER=your_user
#DB_PASSWORD=your_password
#DB_HOST=localhost
#DB_PORT=5432
#DB_NAME=exchange

# API Config
APIKEY=your_apilayer_api_key
API_URL=https://api.apilayer.com/exchangerates_data/convert

# Security
SECRET_KEY=your_secret_key


# render.yaml
# Render deployment config
services:
  - type: web
    name: exchange-api
    env: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "uvicorn app.main:app --host=0.0.0.0 --port=10000"
    envVars:
      - key: USE_SQLITE
        value: "True"
      - key: DB_ENGINE
        value: sqlite
      - key: DB_NAME
        value: exchange
      - key: APIKEY
        value: your_apilayer_api_key
      - key: API_URL
        value: https://api.apilayer.com/exchangerates_data/convert
      - key: SECRET_KEY
        value: your_secret_key


# requirements.txt
fastapi
uvicorn
sqlalchemy
aiosqlite
pydantic
python-dotenv
passlib[bcrypt]
httpx
pytest
pytest-asyncio
pytest-cov



import os
from dotenv import load_dotenv

load_dotenv()

USE_SQLITE = os.getenv("USE_SQLITE", "True") == "True"
DB_NAME = os.getenv("DB_NAME", "exchange")

if USE_SQLITE:
    DATABASE_URL = f"sqlite+aiosqlite:///./{DB_NAME}.db"
else:
    raise ValueError("Only SQLite supported by default")
